
# Logo key
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# set $term kitty --single-instance
# set $term kitty
set $term foot
# set $term alacritty
set $browser firefox-esr
set $browser2 chromium
# set $chrome google-chrome-stable

###############################
#### Gruvbox Material Dark ####
###############################
set $bg       "#282828"
set $bg1      "#32302f"
set $bg2      "#45403d"
set $bg3      "#5a524c"
set $fg       "#d4be98"
set $fg1      "#ddc7a1"
set $red      "#ea6962"
set $green    "#a9b665"
set $yellow   "#d8a657"
set $blue     "#7daea3"
set $purple   "#d3869b"
set $aqua     "#89b482"
set $orange   "#e78a4e"

set $lock "swaylock -f -c 282828"

#                           border     background    text       indicator    child border
# client.focused              #81a1c1    #285577       #ffffff    #2e9ef4      #81a1c1
# client.unfocused            #4c566a    #343d46       #888888    #292d2e      #343d46
# client.focused_inactive     #343d46    #343d46       #888888    #292d2e      #343d46

#                           border     background    text       indicator    child border
client.focused              $fg1       $bg           $fg        $orange      $bg2
client.unfocused            $bg1       $bg2          $fg1       $fg1         $bg1
client.focused_inactive     $bg1       $bg2          $fg1       $fg1         $bg1

# NB. for use with foot
set $dmenu $term -a dmenu dmenu
set $pmenu $term -a pmenu pmenu
# NB. for use with kitty
# set $dmenu $term --class=dmenu -e dmenu
# set $pmenu $term --class=pmenu -e pmenu
# set $password ~/.local/bin/gopass ls -f | wofi --show dmenu | xargs -i ~/.local/bin/gopass {} | head -n1 | wl-copy --paste-once

workspace_layout tabbed
workspace_auto_back_and_forth yes

smart_gaps on
gaps inner 7
# gaps outer 5

default_border normal
default_floating_border normal
hide_edge_borders smart

# NB. no titlebar
font pango:monospace 0
titlebar_border_thickness 1
titlebar_padding 1

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    drag enabled
    # natural_scroll enabled
    middle_emulation enabled
    pointer_accel 0.8
    scroll_method two_finger
}

input * {
    xkb_layout "us,ru"
    # xkb_variant ",winkeys"
    xkb_options "grp:caps_toggle,grp_led:caps"
}

input "1:1:AT_Translated_Set_2_keyboard" xkb_model "pc101"


output * bg $bg solid_color

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

exec swayidle -w \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"'
# exec swayidle -w \
#          timeout 300 $lock \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep $lock

#
# Resizing containers:
#
set $mode_resize "  Resize window: [Ctrl+]h/j/k/l or [Ctrl+]Left/Up/Down/Right"
mode $mode_resize {
    bindsym --to-code {
        h            exec swaymsg resize grow   left 10 || swaymsg resize shrink right 10
        Ctrl+h       exec swaymsg resize grow   left 1  || swaymsg resize shrink right 1
        j            exec swaymsg resize shrink up   10 || swaymsg resize grow   down  10
        Ctrl+j       exec swaymsg resize shrink up   1  || swaymsg resize grow   down  1
        k            exec swaymsg resize grow   up   10 || swaymsg resize shrink down  10
        Ctrl+k       exec swaymsg resize grow   up   1  || swaymsg resize shrink down  1
        l            exec swaymsg resize shrink left 10 || swaymsg resize grow   right 10
        Ctrl+l       exec swaymsg resize shrink left 1  || swaymsg resize grow   right 1

        Left         exec swaymsg resize grow   left 10 || swaymsg resize shrink right 10
        Ctrl+Left    exec swaymsg resize grow   left 1  || swaymsg resize shrink right 1
        Up           exec swaymsg resize shrink up   10 || swaymsg resize grow   down  10
        Ctrl+Up      exec swaymsg resize shrink up   1  || swaymsg resize grow   down  1
        Down         exec swaymsg resize grow   up   10 || swaymsg resize shrink down  10
        Ctrl+Down    exec swaymsg resize grow   up   1  || swaymsg resize shrink down  1
        Right        exec swaymsg resize shrink left 10 || swaymsg resize grow   right 10
        Ctrl+Right   exec swaymsg resize shrink left 1  || swaymsg resize grow   right 1

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}
bindsym --to-code $mod+r mode $mode_resize

#
# System exit

# https://github.com/maximbaz/dotfiles/blob/master/.config/sway/config
set $mode_system "  System exit: (l)ock, (e)xit, (r)eboot, (s)hutdown"
mode $mode_system {
    bindsym --to-code {
        e exec swaymsg exit, mode "default"
        l exec $lock, mode "default"
        # s exec sway-exit suspend, mode "default"
        r exec systemctl -i reboot, mode "default"
        s exec systemctl -i poweroff, mode "default"

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}
bindsym --to-code $mod+q mode $mode_system

# Start a terminal
bindsym $mod+Return exec $term

# browser
bindsym --to-code {
    $mod+a exec $browser --no-remote -P a
    $mod+b exec $browser --no-remote -P b
    $mod+o exec $browser --no-remote -P c
    $mod+Shift+a exec $browser2 --user-data-dir=$HOME/.config/chromium.a
    $mod+Shift+b exec $browser2 --user-data-dir=$HOME/.config/chromium.b --incognito --proxy-server=socks5://127.0.0.1:12021
    $mod+Shift+o exec $browser2 --user-data-dir=$HOME/.config/chromium.o --proxy-server=socks5://127.0.0.1:17000
    # $mod+i exec $chrome --user-data-dir=$HOME/.config/chrome.ivi --incognito --app=https://ivi.ru
    # $mod+m exec $chrome --user-data-dir=$HOME/.config/chrome.spotify --incognito --app=https://open.spotify.com
}

# Kill focused window
bindsym --to-code $mod+Shift+q kill

# Start your launcher
for_window [app_id="^dmenu$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
bindsym --to-code $mod+d exec $dmenu
for_window [app_id="^pmenu$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
bindsym --to-code $mod+p exec $pmenu

# screenshot using PrtSc key
bindsym Print exec take-screenshot

# send signal to waybar to update keyboard layout indicator on CapsLock
bindsym ISO_Next_Group exec "pkill --signal SIGRTMIN+1 waybar"

# meta keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86MonBrightnessDown exec light down
bindsym XF86MonBrightnessUp exec light up

# bindsym XF86AudioPlay exec playerctl play-pause
# bindsym XF86AudioNext exec playerctl next
# bindsym XF86AudioPrev exec playerctl previous

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym --to-code $mod+Shift+c reload

# $mod+comma
# $mod+period
# $mod+slash
# $mod+grave
# $mod+semicolon
# $mod+apostrophe
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym --to-code $mod+bracketleft workspace number 11
bindsym --to-code $mod+bracketright workspace number 12
bindsym --to-code $mod+equal workspace number 13
# bindsym $mod+F1 workspace number 11
# bindsym $mod+F2 workspace number 12
# bindsym $mod+F3 workspace number 13
# bindsym $mod+F4 workspace number 14
# bindsym $mod+F5 workspace number 15
# bindsym $mod+F6 workspace number 16
# bindsym $mod+F7 workspace number 17
# bindsym $mod+F8 workspace number 18
# bindsym $mod+F9 workspace number 19
# bindsym $mod+F10 workspace number 20
# bindsym $mod+F11 workspace number 21
# bindsym $mod+F12 workspace number 22
bindsym --to-code $mod+z workspace back_and_forth
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
bindsym --to-code $mod+Shift+bracketleft move container to workspace number 11
bindsym --to-code $mod+Shift+bracketright move container to workspace number 12
bindsym --to-code $mod+Shift+equal move container to workspace number 13
# bindsym $mod+Shift+F1 move container to workspace number 11
# bindsym $mod+Shift+F2 move container to workspace number 12
# bindsym $mod+Shift+F3 move container to workspace number 13
# bindsym $mod+Shift+F4 move container to workspace number 14
# bindsym $mod+Shift+F5 move container to workspace number 15
# bindsym $mod+Shift+F6 move container to workspace number 16
# bindsym $mod+Shift+F7 move container to workspace number 17
# bindsym $mod+Shift+F8 move container to workspace number 18
# bindsym $mod+Shift+F9 move container to workspace number 19
# bindsym $mod+Shift+F10 move container to workspace number 20
# bindsym $mod+Shift+F11 move container to workspace number 21
# bindsym $mod+Shift+F12 move container to workspace number 22

#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# bindsym $mod+h splith
# bindsym $mod+v splitv

bindsym --to-code $mod+s layout stacking
bindsym --to-code $mod+w layout tabbed
bindsym --to-code $mod+e layout toggle split

bindsym --to-code $mod+f fullscreen

bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
# bindsym $mod+a focus parent

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

for_window [class="^Firefox$"]                      inhibit_idle fullscreen
for_window [app_id="^firefox$"]                     inhibit_idle fullscreen
for_window [class="^Chromium$"]                     inhibit_idle fullscreen
for_window [class="^Google-chrome$"]                inhibit_idle fullscreen
for_window [app_id="^org.qutebrowser.qutebrowser$"] inhibit_idle fullscreen
for_window [class="^jellyfin$"]                     inhibit_idle fullscreen
for_window [class="^mpv$"]                          inhibit_idle visible
for_window [app_id="^mpv$"]                         inhibit_idle visible
for_window [class="^jellyfin$"]                     inhibit_idle visible

for_window [class="(?i)lxappearance"]               floating enable, resize set 700 600
for_window [app_id="(?i)pavucontrol"]               floating enable, resize set 800 600
for_window [window_role="pop-up"]                   floating enable, move absolute center, focus
for_window [window_role="bubble"]                   floating enable
for_window [window_role="dialog"]                   floating enable
for_window [window_role="menu"]                     floating enable
for_window [window_role="task_dialog"]              floating enable
for_window [window_role="Preferences"]              floating enable

#gnome theme settings
# set $gnome-schema org.gnome.desktop.interface
# exec_always {
#     gsettings set $gnome-schema gtk-theme 'Matcha-sea'
#     gsettings set $gnome-schema icon-theme 'Papirus'
#     gsettings set $gnome-schema cursor-theme 'Breeze'
#     gsettings set $gnome-schema font-name 'PT Sans 14'
#     gsettings set $gnome-schema monospace-font-name 'PT Mono 14'
# }

# exec_always import-gsettings \
#     gtk-theme:gtk-theme-name \
#     icon-theme:gtk-icon-theme-name \
#     cursor-theme:gtk-cursor-theme-name


include /etc/sway/config.d/*

exec "systemctl --user start sway-session.target"
exec load-keys
