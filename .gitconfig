[user]
  email = ysegorov@gmail.com
  name = Egorov Yuri
[core]
  editor = vim
  pager = less -+$LESS -FRX
[alias]
  br = branch
  bs = bisect
  ci = commit
  cl = clone
  co = checkout
  cp = cherry-pick
  df = diff
  dfw = diff --word-diff
  dfc = diff --cached
  dfcw = diff --cached --word-diff
  dft = difftool
  dftc = difftool --cached
  gr = grep --break --heading --line-number
  lg = log --graph --oneline --format='%C(green)%h%C(auto)%d%Creset %C(magenta)%aN%Creset %s %C(yellow)%cr%Creset'
  mrg = merge
  pl = pull
  ps = push
  rem = remote
  rh = reset --hard HEAD
  rup = remote update
  sb = status -sb
  sh = stash
  sm = submodule
  st = status
  vs = !gitx --all
[color]
  ui = true
  branch = auto
  diff = auto
  grep = auto
[diff]
  tool = vimdiff
[difftool]
  prompt = false
[push]
  default = simple
[grep]
  extendRegexp = true
  lineNumber = true
[github]
  user = ysegorov
[branch]
# When creating a new branch off a remote branch, always set it up to
# track the remote branch so that we can pull from there.
autoseupmerge = always
[branch "master"]
# This is the list of cmdline options that should be added to git-merge
# when I merge commits into the master branch.
#
# First off, the option --no-commit instructs git not to commit the merge
# by default. This allows me to do some final adjustment to the commit log
# message before it gets commited. I often use this to add extra info to
# the merge message or rewrite my local branch names in the commit message
# to branch names sensible to the casual reader of the git log.
#
# Option --no-ff instructs git to always record a merge commit, even if
# the branch being merged into can be fast-forwarded. This is often the
# case when you create a short-lived topic branch which tracks master, do
# some changes on the topic branch and then merge the changes into the
# master which remained unchanged while you were doing your work on the
# topic branch. In this case the master branch can be fast-forwarded (that
# is the tip of the master branch can be updated to point to the tip of
# the topic branch) and this is what git does by default. With --no-ff
# option set git creates a real merge commit which records the fact that
# another branch was merged. I find this easier to understand and read in
# the log.
mergeoptions = --no-commit --no-ff
